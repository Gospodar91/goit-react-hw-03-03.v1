{"version":3,"sources":["components/loader/Loader.js","components/imageitem/ImageItem.js","components/imageGallery/ImageGallery.js","components/searchbar/SearchBar.js","components/button/Button.js","components/modal/Modal.js","components/App.js","index.js"],"names":["PageLoader","type","color","height","width","timeout","ImageItem","item","onImgClick","className","src","webformatURL","alt","onClick","largeImageURL","ImageGallery","gallery","map","key","id","Searchbar","handleChange","handleOnSubmit","onSubmit","onChange","autoComplete","autoFocus","placeholder","Button","loadMore","Modal","handleKeyDown","props","onClose","closeOnClick","e","target","currentTarget","window","addEventListener","this","removeEventListener","url","console","log","Component","KEY","App","state","query","isLoading","page","openModal","event","value","setState","a","preventDefault","handleSubmit","axios","get","then","data","prevState","hits","largeImageUrl","finally","scroll","scrollTo","top","document","documentElement","scrollHeight","behavior","toggleModal","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dd1e8b33.chunk.js","sourcesContent":["import Loader from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nconst PageLoader = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Puff\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n};\r\nexport default PageLoader;\r\n","import React from \"react\";\r\n\r\nconst ImageItem = ({ item,onImgClick }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      src={item.webformatURL}\r\n      alt=\"sorry\"\r\n      className=\"ImageGalleryItem-image\"\r\n      onClick={()=>onImgClick(item.largeImageURL)}\r\n    />\r\n  </li>\r\n);\r\nexport default ImageItem;\r\n","import React from \"react\";\r\nimport ImageItem from \"../imageitem/ImageItem\";\r\n\r\nconst ImageGallery = ({ gallery, onImgClick }) => (\r\n  <>\r\n    <ul className=\"ImageGallery\">\r\n      {gallery.map(item => (\r\n        <ImageItem item={item} key={item.id} onImgClick={onImgClick} />\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\n\r\nconst Searchbar = ({ handleChange, handleOnSubmit }) => {\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleOnSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          onChange={handleChange}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\nexport default Searchbar;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ loadMore }) => {\r\n  return (\r\n    <>\r\n      <button className=\"Button\" type=\"button\" onClick={loadMore}>\r\n        LOAD MORE\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = ({ key }) => {\r\n    if (key === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  closeOnClick = e => {\r\n    if (e.target !== e.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { url } = this.props;\r\n    console.log(\"this.props\", this.props);\r\n    return (\r\n      <div className=\"Overlay\">\r\n        <div onClick={this.closeOnClick} className=\"Modal\">\r\n          <img src={url} alt=\"not available\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport PageLoader from \"./loader/Loader\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport ImageGallery from \"./imageGallery/ImageGallery\";\r\nimport Searchbar from \"./searchbar/SearchBar\";\r\nimport axios from \"axios\";\r\nimport Button from \"./button/Button\";\r\nimport Modal from \"./modal/Modal\";\r\nconst KEY = \"15302072-a81be31270c5e4995077a81d4\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    query: \"\",\r\n    isLoading: false,\r\n    gallery: [],\r\n    page: 1,\r\n    largeImageURL: \"\",\r\n    openModal: false\r\n  };\r\n  componentDidMount() {\r\n    this.handleSubmit();\r\n  }\r\n\r\n  handleChange = event => {\r\n    if (this.state.query !== event.target.value) {\r\n      this.setState({ page: 1 });\r\n    }\r\n    this.setState({ query: event.target.value });\r\n  };\r\n\r\n  handleOnSubmit = async e => {\r\n    e.preventDefault();\r\n    await this.setState({ gallery: [] });\r\n    await this.handleSubmit();\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { query, page } = this.state;\r\n    this.setState({ isLoading: true });\r\n    axios\r\n      .get(\r\n        `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${KEY}`\r\n      )\r\n      .then(data =>\r\n        this.setState(prevState => ({\r\n          gallery: [...prevState.gallery, ...data.data.hits],\r\n          largeImageUrl: data.data.hits.largeImageURL\r\n        }))\r\n      )\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n  loadMore = async () => {\r\n    const pageStep = 1;\r\n    await this.setState(prevState => ({ page: prevState.page + pageStep }));\r\n    await this.handleSubmit();\r\n  };\r\n  scroll = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\"\r\n    });\r\n  };\r\n  onImgClick = largeImageURL => {\r\n    this.setState({\r\n      largeImageURL: largeImageURL\r\n    });\r\n    this.toggleModal();\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(state => ({ openModal: !state.openModal }));\r\n  };\r\n  render() {\r\n    console.log(\"this.largeImgURL\", this.state.largeImageURL);\r\n    const { gallery, isLoading, page, largeImageURL } = this.state;\r\n    return (\r\n      <>\r\n        <Searchbar\r\n          handleChange={this.handleChange}\r\n          handleOnSubmit={this.handleOnSubmit}\r\n        />\r\n        {isLoading && <PageLoader />}\r\n        <ImageGallery gallery={gallery} onImgClick={this.onImgClick} />\r\n        <Button loadMore={this.loadMore} />\r\n        {page !== 1 && this.scroll()}\r\n        {this.state.openModal && (\r\n          <Modal url={largeImageURL} onClose={this.toggleModal} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n"],"sourceRoot":""}